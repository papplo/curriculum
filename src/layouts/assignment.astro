---
import { getLanguageFromUrl } from '$/lang.js';
import { T } from '$/config.js';
  
  // Import layout partials
import BaseLayout from '$layouts/BaseLayout.astro'
  // Import components
import Button from '../components/Button/index.jsx';

const currentPage = Astro.request.url.pathname
const language = getLanguageFromUrl(currentPage)

const { period_end, period_start, title, client, lang, role, description, url, image, imagebg, tags, teknik } = Astro.props.content;
const renderDate = `${new Date(period_start).getFullYear()} â€” ${new Date(period_end).getFullYear()}`

const techStack = T('assignment','tech_stack', lang || language);
const myRole = T('assignment','my_role', lang || language);
---
<BaseLayout addHead lang={language} bodyClassName="assignment">
  <style lang="scss">
    @use '../../public/styles/_var.scss' as *;
    .hero {
      padding: 8rem;
      display: flex;
      background-color: var(--t-fg);
      background-repeat: no-repeat;
      background-size: cover;
      min-height: 25vw;
      color: white;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    .assignmentTitle {
      font-size: $f-u3;
      font-style: bold;
      letter-spacing: 0.0025em;
      margin-bottom: 0;
      margin-top: 2em;
    }
    .date {
      font-size: $f-d3;
      color: $c-light;
    }
   .leadIn {
      font-size: $f-u3;
      color: var(--t-bg);
    }

    .tagline {
      font-weight: 300;
      font-size: var(--f-u3);
      line-height: 1.5;
    }

    .content {
      // font-size: $f-d1;
      line-height: 1.8;
      @media (min-width: $min-mobile) {
        // font-size: $f-u1;
        line-height: 2.2;
      }
    }

    $tborder: 1px solid $c-border;
    .table {
      border-top: $tborder;
      border-bottom: $tborder;
      display: flex;
      flex-direction: row;

      .table_heading {
        font-size: $f-d2;
        letter-spacing: 0.06em;
        margin: -.2em 0 .5em;
        color: $c-orange;
      }

      .table_cell {
          padding: 1em;
          flex-basis: 50%;

        + .table_cell {
          border-left: $tborder;
          padding-left: 1.2em;
        }
      }

      .role {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        @media (min-width: $min-mobile) {
          flex-direction: row;
        }
        .role_item {
          color: $c-gray;
          list-style: none;
          font-size: $f-d2;
          letter-spacing: 0.03em;
          margin: 0 .8em 0 0;
          @media (min-width: $min-mobile) {
            font-size: $f-d1;
          }
        }
      }
    }

    aside {
      background-image: none;
    }
  </style>
    <main class="wrapper wrapper-readable">
    <section class="wrapper leadIn">
      <h1 class="assignmentTitle">{title}</h1>
      <span class="date">{renderDate}</span><br />

      <div class="pt8 pb8 mb0">
        <span class="tagline">{description}</span>
      </div>
    </section>
    <section class="wrapper">
      <div class="table mb12">
        <div class="table_cell">
          <h2 class="table_heading">{myRole}</h2>
            <ul class="role reset ml0">
              {role?.map((role, index) => <li class="role_item">{role}</li>)}
            </ul>
        </div>
        <div class="table_cell">
          <h2 class="table_heading">{techStack}</h2>
            <ul class="role reset ml0">
              {teknik?.map((teknik, index) => <li class="role_item">{teknik}</li>)}
            </ul>
        </div>
      </div>
    </section>
    <div class="wrapper wrapper__readable">
      <div class="content"><slot></slot></div>
    </div>
  </main>
  <aside background-color={imagebg}>
    {image && <img src={image} />}
  </aside>
</BaseLayout>

